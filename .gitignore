
# Created by https://www.toptal.com/developers/gitignore/api/firebase,swift,xcode,cocoapods
# Edit at https://www.toptal.com/developers/gitignore?templates=firebase,swift,xcode,cocoapods

### CocoaPods ###
## CocoaPods GitIgnore Template

# CocoaPods - Only use to conserve bandwidth / Save time on Pushing
#           - Also handy if you have a large number of dependant pods
#           - AS PER https://guides.cocoapods.org/using/using-cocoapods.html NEVER IGNORE THE LOCK FILE
Pods/

### Firebase ###
.idea
**/node_modules/*
**/.firebaserc

GoogleService-Info.plist

FirebaseAuth/Tests/Sample/Sample/Application.plist
FirebaseAuth/Tests/Sample/Sample/AuthCredentials.h
FirebaseAuth/Tests/Sample/Sample/GoogleService-Info_multi.plist
FirebaseAuth/Tests/Sample/Sample/GoogleService-Info.plist
FirebaseAuth/Tests/Sample/Sample/Sample.entitlements
FirebaseAuth/Tests/Sample/ApiTests/AuthCredentials.h
FirebaseAuth/Tests/Sample/SwiftApiTests/Credentials.swift

FirebaseDatabase/Tests/Resources/GoogleService-Info.plist

FirebaseRemoteConfig/Tests/SwiftAPI/Resources/GoogleService-Info.plist
FirebaseRemoteConfig/Tests/Sample/RemoteConfigSampleApp/GoogleService-Info.plist
FirebaseRemoteConfig/Tests/Sample/RemoteConfigSampleApp/SecondApp-GoogleService-Info.plist

# FirebaseStorage integration tests GoogleService-Info.plist
FirebaseStorage/Tests/Integration/Resources/GoogleService-Info.plist

# FirebaseInstallations integration tests GoogleService-Info.plist
FirebaseInstallations/Source/Tests/Resources/GoogleService-Info.plist

# FirebaseMessaging integration tests GoogleService-Info.plist
FirebaseMessaging/Tests/IntegrationTests/Resources/GoogleService-Info.plist
# FirebaseMessaging test app GoogleService-Info.plist
FirebaseMessaging/Apps/Shared/GoogleService-Info.plist
FirebaseMessaging/Apps/AdvancedSample/SampleWatchWatchKitExtension/GoogleService-Info.plist
FirebaseMessaging/Apps/AdvancedSample/AppClips/GoogleService-Info.plist

# Credentials for Firebase Storage Integration Tests
FirebaseStorage/Tests/Integration/Credentials.h
FirebaseStorage/Tests/SwiftIntegration/Credentials.swift
FirebaseStorageSwift/Tests/Integration/Credentials.swift

# FirebaseSegmentation integration tests GoogleService-Info.plist
FirebaseSegmentation/Tests/Sample/GoogleService-Info.plist

# FirebaseMLModelDownloader integration tests GoogleService-Info.plist
FirebaseMLModelDownloader/Tests/Integration/Resources/GoogleService-Info.plist
FirebaseMLModelDownloader/Apps/Sample/**/GoogleService-Info.plist

# FirebasePerformance dev test App and integration tests GoogleService-Info.plist
FirebasePerformance/**/GoogleService-Info.plist

Secrets.tar

# OS X
.DS_Store

# Xcode
build/
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/
*.xccheckout
profile
*.moved-aside
DerivedData
*.hmap
*.ipa

# Swift Package Manager
Package.resolved
*/.build
ReleaseTooling/.swiftpm
ReleaseTooling/Packages
ReleaseTooling/*.xcodeproj
ReleaseTooling/Package.resolved
scripts/code_coverage_report/*/Package.resolved
scripts/code_coverage_report/*/.build

# Bad sorts get generated if the package .xcscheme is not regenerated.
# Anything committed to xcshareddata gets propagated to clients. (#8167)
.swiftpm/xcode/xcshareddata/

# Mint package manager
Mint

# IntelliJ
.idea

# Vim
*.swo
*.swp
*~

# Bundler
/.bundle
/vendor

Carthage
# Cocoapods recommends against adding the Pods directory to your .gitignore. See
# http://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control

# Since Firebase is building libraries, not apps, we should not check in Pods.
# Pods are only used in the Examples and tests and doing a 'pod install' better
# matches our customers' environments.
#
# Note: if you ignore the Pods directory, make sure to uncomment
# `pod install` in .travis.yml
#
Pods/
Podfile.lock
*.xcworkspace

# CMake
.downloads
Debug
Release
Ninja

# CLion
/cmake-build-debug
/cmake-build-release

# Python
*.pyc

# Visual Studio
/.vs

# Visual Studio Code
/.vscode

# clangd support file
compile_commands.json

# CocoaPods generate
gen/

# b/111916494
default.profraw

# Firestore emulator
cloud-firestore-emulator.log
cloud-firestore-emulator.pid

# Let Gemfiles in CocoaPodsIntegrationTest float to catch issues asap
CocoaPodsIntegrationTest/**/Gemfile.lock
CocoaPodsIntegrationTest/Gemfile
CocoaPodsIntegrationTest/Podfile

# In-app messaging integration tests
FirebaseInAppMessaging/Tests/Integration/FunctionalTestApp/GoogleService-Info.plist
FirebaseInAppMessaging/Tests/Integration/FunctionalTestApp/App/InAppMessaging-Example-iOS/AppDelegate.m

# FIRAppCheckTestApp
FirebaseAppCheck/Apps/FIRAppCheckTestApp/FIRAppCheckTestApp/GoogleService-Info.plist
FirebaseAppCheck/Apps/AppCheckCustomProvideApp/AppCheckCustomProvideApp/GoogleService-Info.plist

### Firebase Patch ###
.runtimeconfig.json
.firebase/

### Swift ###
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
# Pods/
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

### Xcode ###
# Xcode
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore




## Gcc Patch
/*.gcno

### Xcode Patch ###
*.xcodeproj/*
!*.xcodeproj/project.pbxproj
!*.xcodeproj/xcshareddata/
!*.xcworkspace/contents.xcworkspacedata
**/xcshareddata/WorkspaceSettings.xcsettings

# End of https://www.toptal.com/developers/gitignore/api/firebase,swift,xcode,cocoapods
